/*
 * This class is generated dynamically from Patch Rules.
 */
global class PatchRuleEngine4 extends  PatchRuleEngineBase implements IPatchRuleEngine
{
  private Id matchGroup1(PatchDataModel.MatchTarget t)
  {
    if(((opStart(t.zipCode, new Set<String> { 't' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'ab', 'alberta' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000EiVWAA0'; //Patch GB US New England/Canada - Alberta
    if(((opStart(t.zipCode, new Set<String> { 'v' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'bc', 'british columbia', 'commercial' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TST5AAO'; //Patch GB US New England/Canada - British Columbia
    if(((opStart(t.zipCode, new Set<String> { 'a' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'lb', 'labrador' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TST9AAO'; //Patch GB US New England/Canada - Labrador
    if(((opStart(t.zipCode, new Set<String> { 'r' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'mb', 'manitoba' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTDAA4'; //Patch GB US New England/Canada - Manitoba
    if(((opStart(t.zipCode, new Set<String> { 'e' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'nb', 'new brunswick' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTHAA4'; //Patch GB US New England/Canada - New Brunswick
    if(((opStart(t.zipCode, new Set<String> { 'a' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'nf', 'newfoundland' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTLAA4'; //Patch GB US New England/Canada - Newfoundland
    if(((opStart(t.zipCode, new Set<String> { 'b' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'ns', 'nova scotia' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTPAA4'; //Patch GB US New England/Canada - Nova Scotia
    if(((opStart(t.zipCode, new Set<String> { 'x' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'nu', 'nunavut' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTTAA4'; //Patch GB US New England/Canada - Nunavut
    if(((opStart(t.zipCode, new Set<String> { 'x' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'nw', 'north west terr.' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTXAA4'; //Patch GB US New England/Canada - North West Terr.
    if(((opStart(t.zipCode, new Set<String> { 'k', 'l', 'm', 'n', 'p' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'on', 'ontario' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTbAAO'; //Patch GB US New England/Canada - Ontario
    if(((opStart(t.zipCode, new Set<String> { 'c' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'pe', 'prince edward is.' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTfAAO'; //Patch GB US New England/Canada - Prince Edward Is.
    if(((opStart(t.zipCode, new Set<String> { 'g', 'h', 'j' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'qc', 'quebec' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTjAAO'; //Patch GB US New England/Canada - Quebec
    if(((opStart(t.zipCode, new Set<String> { 's' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'sk', 'saskatchewen' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTnAAO'; //Patch GB US New England/Canada - Saskatchewen
    if(((opStart(t.zipCode, new Set<String> { 'y' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'yu', 'yukon' })) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSTrAAO'; //Patch GB US New England/Canada - Yukon
    if((opIn(t.state, new Set<String> { 'dc', 'dist of columbia', 'district of columbia', 'md', 'maryland', 'va', 'virginia', 'nc', 'north carolina', 'sc', 'south carolina' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSPRAA4'; //Patch GB US Mid Atlantic - All States
    if(opIn(t.country, new Set<String> { 'ar', 'arg', 'argentina', 'bz', 'blz', 'belize', 'bo', 'bol', 'bolivia', 'br', 'bra', 'brazil', 'brasil', 'cl', 'chl', 'chile', 'co', 'col', 'colombia', 'cr', 'cri', 'costa rica', 'cu', 'cub', 'cuba', 'do', 'dom', 'dominican republic', 'ec', 'ecu', 'ecuador', 'sv', 'slv', 'el salvador', 'gq', 'gnq', 'equatorial guinea', 'fk', 'flk', 'falkland islands', 'malvinas', 'gt', 'gtm', 'guatemala', 'gn', 'gin', 'guinea', 'gw', 'gnb', 'guinea-bissau', 'gy', 'guy', 'guyana', 'ht', 'hti', 'haiti', 'hn', 'hnd', 'honduras', 'jm', 'jam', 'jamaica', 'mx', 'mex', 'mexico', 'pa', 'pan', 'panama', 'uy', 'ury', 'uruguay', 'uruguayve', 'ven', 'venezuela', 've', 'american samoa', 'united states minor outlying islands', 'guam' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'commercial', 'terr sales', 'corporate sales', 'territory sales' }))      return 'a3070000000TSABAA4'; //Patch GB LatAm - GEO based (All Countries)
    if(opIn(t.country, new Set<String> { 'ai', 'aia', 'anguilla', 'aw', 'abw', 'aruba', 'bs', 'bhs', 'bahamas', 'bb', 'brb', 'barbados', 'ky', 'cym', 'cayman islands', 'pm', 'spm', 'st. pierre and miquelon', 'west indies', 'saint kitts and nevis', 'saint kitts & nevis anguilla', 'grenada' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'commercial', 'terr sales', 'corporate sales', 'territory sales' }))      return 'a3070000000TSSsAAO'; //Patch Carribean GB
    if(prematches.get('Country').contains('a3170000002l2uYAAQ') && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'commercial', 'terr sales', 'corporate sales', 'territory sales' }))      return 'a3070000000TjyaAAC'; //Patch Catch All - LAT - MM
    if(opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }) && opIn(t.country, new Set<String> { 'no', 'nor', 'norway', 'dk', 'dnk', 'denmark', 'is', 'isl', 'iceland', 'fi', 'fin', 'finland', 'se', 'swe', 'sweden', 'greenland', 'faroe islands', 'aland islands', 'åland islands' }))      return 'a300g0000019xXDAAY'; //Patch GB Nordics - Nordics GEO
    if(opIn(t.country, new Set<String> { 'de', 'deu', 'germany', 'deutschland' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TXPGAA4'; //Patch GB DACH EE - DACH MM Countries
    if(opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }) && opIn(t.country, new Set<String> { 'be', 'bel', 'belgium', 'nl', 'nld', 'netherlands', 'the netherlands', 'holland', 'north holland', 'lu', 'lux', 'luxembourg', 'luxemburg' }))      return 'a300g0000019xUrAAI'; //Patch GB NEUR 1 - GB
    if(opIn(t.country, new Set<String> { 'at', 'aut', 'austria', 'österreich', 'osterreich', 'ch', 'che', 'switzerland', 'schweiz' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TS9jAAG'; //Patch GB CH & AT - GEO Based
    if(opIn(t.country, new Set<String> { 'md', 'moldova', 'moldavia', 'al', 'alb', 'albania', 'am', 'arm', 'armenia', 'az', 'aze', 'azerbaijan', 'by', 'blr', 'belarus', 'ba', 'bih', 'bosnia and herzegowina', 'bosnia and herzegovina', 'bg', 'bgr', 'bulgaria', 'hr', 'hrv', 'croatia', 'hrvatska', 'cz', 'cze', 'czech republic', 'ee', 'est', 'estonia', 'ge', 'geo', 'georgia', 'hu', 'hun', 'hungary', 'hungaria', 'pl', 'pol', 'poland', 'ro', 'rom', 'romania', 'ru', 'rus', 'russian federation', 'russia', 'rs', 'srb', 'serbia', 'sk', 'svk', 'slovakia', 'slovak republic', 'si', 'svn', 'slovenia', 'ua', 'ukr', 'ukraine', 'kz', 'kaz', 'kazakhstan', 'lv', 'lva', 'latvia', 'li', 'lie', 'liechtenstein', 'lt', 'ltu', 'lithuania', 'mk', 'mkd', 'macedonia', 'montenegro', 'turkmenistan', 'tr', 'tur', 'turkey', 'balkans', 'moscow', 'uzbekistan', 'kosovo', 'republic of kosovo', 'tajikistan' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000003yrWAAQ'; //Patch GB DACH EE - All Countries
    if(opIn(t.country, new Set<String> { 'fr', 'fra', 'france' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TdqOAAS'; //Patch GB France - FRANCE
    if(opIn(t.country, new Set<String> { 'mc', 'mco', 'monaco', 'gf', 'guf', 'french guiana', 'pf', 'pyf', 'french polynesia', 'samoa', 'tf', 'atf', 'french southern territories', 'senegal', 'sn' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000F9tpAAC'; //Patch GB France - MONACO
    if(opIn(t.country, new Set<String> { 're', 'reu', 'reunion' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSKYAA4'; //Patch GB France - REUNION
    if(opIn(t.country, new Set<String> { 'gf', 'guf', 'french guiana' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSE3AAO'; //Patch GB France - FRENCH GUIANA
    if(opIn(t.country, new Set<String> { 'mt', 'malta' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VemAAE'; //Patch GB France - MALTA
    if(opIn(t.country, new Set<String> { 'pf', 'pyf', 'french polynesia', 'samoa' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSE7AAO'; //Patch GB France - FRENCH POLYNESIA
    if(opIn(t.country, new Set<String> { 'senegal', 'sn' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000010trYAAQ'; //Patch GB France - Senegal
    if(opIn(t.country, new Set<String> { 'tf', 'atf', 'french southern territories' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSEBAA4'; //Patch GB France - FRENCH SOUTHERN TERRITORIES
    if(opIn(t.country, new Set<String> { 'mt', 'malta' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000ErQUAA0'; //Patch GB France - MALTA
    if(opIn(t.country, new Set<String> { 'dza', 'algeria', 'morocco', 'tunisia' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000FBJaAAO'; //Patch GB - ALGERIA, MOROCCO, TUNISIA
    if(opIn(t.country, new Set<String> { 'pt', 'prt', 'portugal', 'es', 'esp', 'spain', 'gibraltar', 'gibraltor' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSKMAA4'; //Patch GB Iberia & Italy - IBERIA
    if(opIn(t.country, new Set<String> { 'cy', 'cyp', 'cyprus' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfgAAE'; //Patch GB Iberia & Italy - CYPRUS
    return null;
  }
  private Id matchGroup2(PatchDataModel.MatchTarget t)
  {
    if(opIn(t.country, new Set<String> { 'republic of san marino', 'san marino', 'sm' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfZAAU'; //Patch GB Iberia & Italy - SAN MARINO
    if(opIn(t.country, new Set<String> { 'andorra', 'principality of andorra', 'ad' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfhAAE'; //Patch GB Iberia & Italy - ANDORRA
    if(opIn(t.country, new Set<String> { 'it', 'ita', 'italy', 'italia', 'gr', 'grc', 'greece' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a300g0000019xXEAAY'; //Patch GB Iberia & Italy - ITALY & GREECE
    if(opIn(t.country, new Set<String> { 'af', 'afghanistan', 'bhr', 'bahrain', 'egypt', 'iran', 'iraq', 'jordon', 'jordan', 'jo', 'kw', 'kuwait', 'lebanon', 'libya', 'oman', 'palestine', 'palestina', 'qatar', 'saudi arabia', 'ksa', 'syria', 'dubai', 'united arab emirates', 'uae', 'yemen', 'israel', 'tajikistan', 'iran, islamic republic of' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TdqJAAS'; //Patch GB MEA - All
    if(opIn(t.country, new Set<String> { 'central african republic', 'seychelles', 'madagascar', 'congo', 'gambia', 'cameroon', 'mauritius', 'uganda', 'angola', 'malawi', 'benin', 'somalia', 'mauritania', 'burundi', 'gabon', 'mali', 'swaziland', 'togo', 'tanzania', 'liberia', 'côte d\'ivoire', 'ivory coast', 'lesotho', 'burkina faso', 'ng', 'nga', 'nigeria', 'ke', 'ken', 'kenya', 'gh', 'ghana', 'bw', 'bwa', 'botswana', 'cv', 'cpv', 'cape verde', 'et', 'eth', 'ethiopia', 'na', 'nam', 'namibia', 'za', 'zaf', 'south africa', 'ss', 'ssd', 'south sudan', 'sd', 'sdn', 'sudan', 'zmb', 'zambia', 'zimbabwe', 'zwe', 'zwecomoros', 'comoros', 'com', 'mozambique', 'mz', 'eritrea', 'bouvet island', 'rwanda', 'chad' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000010rOYAAY'; //Patch GB - Other Africa Countries
    if(opIn(t.country, new Set<String> { 'nz', 'nzl', 'new zealand', 'fiji', 'fiji islands', 'fji', 'fji. fji', 'cook islands', 'cok' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfjAAE'; //Patch GB ANZ North - New Zealand
    if(opIn(t.country, new Set<String> { 'au', 'aus', 'australia', 'new caledonia', 'new caledonia (french)' }) && opIn(t.state, new Set<String> { 'new south wales', 'nsw', 'queensland', 'act', 'qld', 'nt', 'northern territory', 'australian capital territory' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VflAAE'; //Patch GB ANZ North - North Australia
    if(opIn(t.country, new Set<String> { 'nc', 'ncl', 'new caledonia', 'new caledonia (french)', 'micronesia', 'papua new guinea', 'vanuatu', 'vanautu', 'tuvalu', 'solomon islands', 'kiribati' }))      return 'a3070000000TSJ8AAO'; //Patch Oceania Countries
    if(opIn(t.country, new Set<String> { 'au', 'aus', 'australia' }) && opIn(t.state, new Set<String> { 'vic', 'victoria', 'south australia', 'sa', 'western australia', 'wa', 'melbourne', 'tasmania', 'tas' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfiAAE'; //Patch GB ANZ South - South Australia
    if(opIn(t.country, new Set<String> { 'cambodia', 'khm', 'mm', 'mmr', 'myanmar', 'burma', 'brunei darussalam', 'brunei', 'mongolia', 'vietnam', 'vn', 'viet nam', 'id', 'idn', 'indonesia', 'my', 'mys', 'malaysia', 'ph', 'phl', 'philippines', 'sg', 'sgp', 'singapore', 'th', 'tha', 'thailand', 'east timor' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019LV5AAM'; //Patch All APAC Countries - GB
    if(opIn(t.country, new Set<String> { 'gb', 'gbr', 'united kingdom', 'uk', 'great britain', 'england', 'united kingdom of great britain and northern ireland' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }) && opStart(t.zipCode, new Set<String> { 'ec', 'sw', 'w1', 'wc', 'se', 'rg', 'bs', 'nw', 'ox', 'kt', 'gu', 'ng', 'e1', 'cb', 'le', 'nn', 'tw', 'pe', 'po', 'tn', 'sl', 'hp', 'mk', 'n1', 'da', 'ip', 'so', 'bn', 'gl', 'nr', 'je', 'rh', 'ub', 'cm', 'ha', 'me', 'wd', 'wr', 'ba', 'bh', 'cr', 'ex', 'sg', 'br', 'ss', 'w6', 'w2', 'sn', 'en', 'rm', 'al', 'co', 'ig', 'ct', 'lu', 'w8', 'gy', 'pl', 'sp', 'w4', 'ln', 'w5', 'dt', 'n3', 'sm', 'tq', 'tr', 'w3', 'w9', 'e5', 'e6', 'n2', 'n4', 'n9', 'e2', 'e3', 'e4', 'e7', 'e8', 'e9', 'n5', 'n6', 'n7', 'n8', 'w7', 'cv', 'ls', 'de', 'sk', 'ch', 'm2', 'bd', 'ol', 'dn', 'wa', 'm1', 'yo', 'bl', 'm3', 'st', 'b7', 'b1', 'b3', 'b9', 'b6', 'hd', 'b4', 'ca', 'dy', 'fy', 'l3', 'pr', 'ta', 'cw', 'l2', 'ts', 's4', 'wf', 'wn', 'ws', 'wv', 'dl', 's6', 'b2', 'l1', 'm4', 'm5', 's3', 's8', 'sa', 'sr', 'sy', 'bb', 'hx', 's1', 's7', 'tf', 'b5', 'l7', 'l8', 'l9', 'm6', 'm9', 's2', 's9', 'b8', 'l4', 'l5', 'l6', 'm7', 'm8', 's5' }))      return 'a300g0000019xVgAAI'; //Patch GB UK&I 1 - GEO Zip codes
    if(opIn(t.country, new Set<String> { 'bermuda', 'bm' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a300g000001IBk6AAG'; //Patch GB UK&I 1 - Bermuda
    if(opIn(t.country, new Set<String> { 'gb', 'gbr', 'united kingdom', 'uk', 'great britain', 'england' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }) && opStart(t.zipCode, new Set<String> { 'bt', 'eh', 'cf', 'ab', 'fk', 'ne', 'np', 'hu', 'g1', 'im', 'ky', 'g4', 'll', 'ml', 'dd', 'dh', 'g7', 'hg', 'hr', 'la', 'ph', 'dg', 'g2', 'g5', 'g6', 'td', 'g8', 'ka', 'g3', 'hs', 'ld' }))      return 'a300g0000019xVjAAI'; //Patch GB UK&I 1 - GEO Zip
    if(opIn(t.country, new Set<String> { 'gb', 'gbr', 'united kingdom', 'uk', 'great britain', 'england', 'united knigdom' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a300g0000019xVeAAI'; //Patch GB UK&I 1 - For Blank ZipCodes
    if(opIn(t.country, new Set<String> { 'republic of ireland', 'ie', 'irl', 'ireland', 'wales', 'wal', 'scotland', 'sct', 'cayman islands', 'northern ireland', 'nir' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a300g0000019xWEAAY'; //Patch GB UK&I 1 - Countries
    if(opIn(t.country, new Set<String> { 'hk', 'hkg', 'hong kong', 'hongkong' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'terr sales', 'corporate sales', 'territory sales' }))      return 'a3070000000TdcfAAC'; //Patch GB GCR - GEO
    if(opIn(t.country, new Set<String> { 'cn', 'chn', 'china' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'terr sales', 'corporate sales', 'territory sales' }))      return 'a3070000000TSBzAAO'; //Patch GB GCR - GEO
    if(prematches.get('Country').contains('a3170000002OIWXAA4') && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'terr sales', 'corporate sales', 'territory sales' }))      return 'a3070000000TSMgAAO'; //Patch GB GCR - GEO
    if(opIn(t.country, new Set<String> { 'macau', 'macao', 'mac' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'terr sales', 'corporate sales', 'territory sales' }))      return 'a30700000019LVAAA2'; //Patch GB GCR - GEO
    if(opIn(t.country, new Set<String> { 'bd', 'bgd', 'bangladesh' }))      return 'a3070000000TSAZAA4'; //Patch BANGLADESH
    if(opIn(t.country, new Set<String> { 'bt', 'btn', 'bhutan' }))      return 'a3070000000TSAtAAO'; //Patch BHUTAN
    if(opIn(t.country, new Set<String> { 'np', 'npl', 'nepal' }))      return 'a3070000000TSIxAAO'; //Patch NEPAL
    if(prematches.get('State').contains('a3170000003sBvqAAE') && opIn(t.country, new Set<String> { 'in', 'ind', 'india' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfDAAU'; //Patch All India North - GB (India States)
    if(opIn(t.country, new Set<String> { 'nepal', 'np', 'bangladesh', 'bd', 'bhutan', 'bt' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfcAAE'; //Patch All India North - GB (Countries)
    if(opIn(t.country, new Set<String> { 'pakistan', 'pak', 'pk' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfnAAE'; //Patch All India West - GB (Countries)
    if(opIn(t.country, new Set<String> { 'pk', 'pak', 'pakistan' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSJnAAO'; //Patch PAKISTAN - COMM
    if(prematches.get('State').contains('a3170000003sBwTAAU') && opIn(t.country, new Set<String> { 'in', 'ind', 'india' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfVAAU'; //Patch All India South - GB (India States)
    if(opIn(t.country, new Set<String> { 'maldives', 'mv', 'sri lanka', 'srilanka', 'sri-lanka' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfdAAE'; //Patch All India South - GB (Countries)
    if(opIn(t.country, new Set<String> { 'mv', 'mdv', 'maldives' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSHfAAO'; //Patch MALDIVES - COMM
    if(opIn(t.country, new Set<String> { 'lk', 'lka', 'sri lanka' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSM6AAO'; //Patch SRI LANKA - COMM
    if(opIn(t.country, new Set<String> { 'south korea', 'kr', '\'korea', 'republic of\'', 'korea', 'republic of korea', 'jp', 'jpn', 'japan' }) && opIn(t.custom1, new Set<String> { 'corp sales', 'corporate sales' }))      return 'a300g000002Q1FyAAK'; //Patch CSR North Asia - GEO Based (Japan & Korea)
    if(prematches.get('State').contains('a3170000003sBxDAAU') && opIn(t.country, new Set<String> { 'in', 'ind', 'india' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfoAAE'; //Patch All India West - GB (India States)
    if(opIn(t.country, new Set<String> { 'south korea', 'kr', '\'korea', 'republic of\'', 'korea', 'republic of korea' }) && opIn(t.custom1, new Set<String> { 'general business', 'terr sales', 'territory sales' }))      return 'a30700000019VfeAAE'; //Patch TSR North Asia - Korea GEO Based
    if(opIn(t.country, new Set<String> { 'jp', 'jpn', 'japan' }) && opIn(t.custom1, new Set<String> { 'general business', 'enterprise', 'large enterprise', 'corp sales', 'major', 'corporate sales' }))      return 'a300g000001IBiDAAW'; //Patch Catch All Japan - GEO based
    if(opIn(t.country, new Set<String> { 'au', 'aus', 'australia', 'cocos (keeling) islands' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000010taXAAQ'; //Patch Catch All - ANZ- MM
    return null;
  }
  private Id matchGroup3(PatchDataModel.MatchTarget t)
  {
    if(opIn(t.country, new Set<String> { 'au', 'aus', 'australia' }))      return 'a30700000010tacAAA'; //Patch Catch All - ANZ
    if(opIn(t.country, new Set<String> { 'in', 'ind', 'india' }))      return 'a3070000000TSFeAAO'; //Patch INDIA
    if(opIn(t.country, new Set<String> { 'in', 'ind', 'india' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSFfAAO'; //Patch INDIA - COMM
    if(opIn(t.country, new Set<String> { 'cambodia', 'khm', 'mm', 'mmr', 'myanmar', 'burma', 'brunei darussalam', 'brunei', 'mongolia', 'vietnam', 'vn', 'viet nam', 'id', 'idn', 'indonesia', 'my', 'mys', 'malaysia', 'ph', 'phl', 'philippines', 'sg', 'sgp', 'singapore', 'th', 'tha', 'thailand' }) && opEqual(t.custom1, 'Large Enterprise, Major'))      return 'a3070000000TddYAAS'; //Patch Catch All - APAC - LE
    if(opIn(t.country, new Set<String> { 'cambodia', 'khm', 'mm', 'mmr', 'myanmar', 'burma', 'brunei darussalam', 'brunei', 'mongolia', 'vietnam', 'vn', 'viet nam', 'id', 'idn', 'indonesia', 'my', 'mys', 'malaysia', 'ph', 'phl', 'philippines', 'sg', 'sgp', 'singapore', 'th', 'tha', 'thailand' }) && opEqual(t.custom1, 'Enterprise'))      return 'a3070000000Tjy1AAC'; //Patch Catch All - APAC - ENT
    if(prematches.get('Country').contains('a3170000002l2ncAAA') && opIn(t.custom1, new Set<String> { 'general business', 'enterprise', 'large enterprise', 'corp sales', 'terr sales', 'corporate sales', 'territory sales', 'major' }))      return 'a3070000000Tjy6AAC'; //Patch Catch All - APAC
    if(prematches.get('Country').contains('a3170000002l2sNAAQ') && opIn(t.custom1, new Set<String> { 'general business', 'enterprise', 'large enterprise', 'corp sales', 'terr sales', 'major', 'corporate sales', 'territory sales' }))      return 'a3070000000TjyLAAS'; //Patch Catch All - EMEA
    if(opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }) && opIn(t.custom1, new Set<String> { 'general business', 'enterprise', 'large enterprise', 'corp sales', 'terr sales', 'major', 'corporate sales', 'territory sales' }))      return 'a3070000000TjxhAAC'; //Patch Catch All - US - MM
    if(((opStart(t.zipCode, new Set<String> { 'k', 'l', 'm', 'n', 'p' }) && opIn(t.country, new Set<String> { 'ca', 'canada' })) || opIn(t.state, new Set<String> { 'on', 'ontario' })) && opEqual(t.custom1, 'Large Enterprise, Major'))      return 'a3070000000TSTZAA4'; //Patch Ontario - LE
    if(opIn(t.country, new Set<String> { 'ca', 'canada' }) && opEqual(t.custom1, 'Large Enterprise, Major'))      return 'a3070000000TjxmAAC'; //Patch Catch All - Canada - LE
    if(opIn(t.country, new Set<String> { 'ca', 'canada' }) && opEqual(t.custom1, 'Enterprise'))      return 'a3070000000TjxrAAC'; //Patch Catch All - Canada - ENT
    if(opIn(t.country, new Set<String> { 'ca', 'canada' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TjxwAAC'; //Patch Catch All - Canada - MM
    if(opIn(t.country, new Set<String> { 'au', 'aus', 'australia', 'new caledonia', 'new caledonia (french)', 'fiji', 'fiji islands', 'fji', 'fji. fji', 'cook islands', 'cok' }))      return 'a300g0000019xV6AAI'; //Patch CatchAll - ANZ (All)
    if(opIn(t.country, new Set<String> { 'ke', 'ken', 'kenya' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000FBJGAA4'; //Patch GB- KENYA
    if(opIn(t.country, new Set<String> { 'zmb', 'zambia' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019LBSAA2'; //Patch GB - ZAMBIA
    if(opIn(t.country, new Set<String> { 'gh', 'ghana', 'côte d\'ivoire', 'ivory coast' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000FPYfAAO'; //Patch GB - GHANA
    if((opIn(t.state, new Set<String> { 'ms', 'mississippi' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TkINAA0'; //Patch GB US South East - Mississippi
    if(opIn(t.country, new Set<String> { 'zimbabwe', 'zwe' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019LOwAAM'; //Patch GB - ZIMBABWE
    if(opIn(t.country, new Set<String> { 'vn', 'vietnam', 'viet nam' }) && opEqual(t.custom1, 'Enterprise'))      return 'a300g0000007wvbAAA'; //Patch GB ASEAN - VIETNAM
    if(opIn(t.country, new Set<String> { 'vn', 'vietnam', 'viet nam' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000FOM2AAO'; //Patch All APAC - VIETNAM - GB
    if(opEqual(t.custom1, 'Large Enterprise, Major') && opIn(t.country, new Set<String> { 'thailand', 'th', 'my', 'mys', 'malaysia', 'vn', 'vietnam', 'viet nam', 'sg', 'sgp', 'singapore', 'cambodia', 'khm', 'mm', 'mmr', 'myanmar', 'burma', 'brunei darussalam', 'brunei', 'mongolia', 'ph', 'phl', 'philippines', 'indonesia' }))      return 'a300g0000015SIWAA2'; //Patch GB ASEAN - All Countries - LE
    if(opIn(t.country, new Set<String> { 'comoros', 'com' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VdYAAU'; //Patch GB - Comoros
    if(opIn(t.country, new Set<String> { 'it', 'ita', 'italy' }) && opIn(t.custom1, new Set<String> { 'commercial', 'smb', 'soho' }))      return 'a30700000019VeRAAU'; //Patch GB Southern Europe - ITALY
    if(opIn(t.country, new Set<String> { 'mozambique', 'mz' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a30700000019VfJAAU'; //Patch GB - Mozambique
    if((opIn(t.state, new Set<String> { 'md', 'maryland' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSQGAA4'; //Patch GB US South East - Maryland
    if((opIn(t.state, new Set<String> { 'me', 'maine' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSQKAA4'; //Patch GB US New England/Canada - Maine
    if((opIn(t.state, new Set<String> { 'nh', 'new hampshire' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSQuAAO'; //Patch GB US New England/Canada - New Hampshire
    if((opIn(t.state, new Set<String> { 'nj', 'n.j.', 'new jersey' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSQyAAO'; //Patch GB US North East - New Jersey
    if((opIn(t.state, new Set<String> { 'ny', 'new york' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSRHAA4'; //Patch GB US North East - New York
    if(opIn(t.custom1, new Set<String> { 'smb', 'soho' }) && opIn(t.state, new Set<String> { 'ny', 'new york' }) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSRPAA4'; //Patch GB US North East - New York 3
    if((opIn(t.state, new Set<String> { 'oh', 'ohio' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho', 'commercial' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSRTAA4'; //Patch GB US Ohio Valley - Ohio
    if((opIn(t.state, new Set<String> { 'ok', 'oklahoma' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSRXAA4'; //Patch GB US South Central - Oklahoma
    if((opIn(t.state, new Set<String> { 'pa', 'pennsylvania' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSRfAAO'; //Patch GB US North East - Pennsylvania
    if((opIn(t.state, new Set<String> { 'ri', 'rhode island' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSRrAAO'; //Patch GB US New England/Canada - Rhode Island
    if((opIn(t.state, new Set<String> { 'sc', 'south carolina' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho', 'commercial' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSRvAAO'; //Patch GB US South East - South Carolina
    return null;
  }
  private Id matchGroup4(PatchDataModel.MatchTarget t)
  {
    if((opIn(t.state, new Set<String> { 'tn', 'tennessee' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSS3AAO'; //Patch GB US South East - Tennessee
    if((opIn(t.state, new Set<String> { 'tx', 'texas' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSS7AAO'; //Patch GB US South Central - Texas
    if((opIn(t.state, new Set<String> { 'va', 'virginia' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSSFAA4'; //Patch GB US South East - Virginia
    if((opIn(t.state, new Set<String> { 'in', 'indiana' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSPtAAO'; //Patch GB US North Central - Indiana
    if((opIn(t.state, new Set<String> { 'ks', 'kansas' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSQ0AAO'; //Patch GB US South Central - Kansas
    if((opIn(t.state, new Set<String> { 'ky', 'kentucky' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho', 'commercial' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSQ4AAO'; //Patch GB US Ohio Valley - Kentucky
    if((opIn(t.state, new Set<String> { 'la', 'louisiana' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSQ8AAO'; //Patch GB US South Central - Louisiana
    if(opIn(t.country, new Set<String> { 'hn', 'hnd', 'honduras' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSFPAA4'; //Patch All LatAm - HONDURAS
    if(opIn(t.country, new Set<String> { 'id', 'idn', 'indonesia' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSFjAAO'; //Patch All APAC - INDONESIA - GB
    if(opIn(t.country, new Set<String> { 'il', 'isr', 'israel' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSFzAAO'; //Patch GB - ISRAEL
    if(opIn(t.country, new Set<String> { 'it', 'ita', 'italy' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSG2AAO'; //Patch ITALY - COMM
    if(opIn(t.country, new Set<String> { 'do', 'dom', 'dominican republic' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSD5AAO'; //Patch All LatAm - DOMINICAN REPUBLIC
    if(opIn(t.country, new Set<String> { 'ec', 'ecu', 'ecuador' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSDDAA4'; //Patch All LatAm - ECUADOR
    if(opIn(t.country, new Set<String> { 'sv', 'slv', 'el salvador' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSDLAA4'; //Patch All LatAm - EL SALVADOR
    if(opIn(t.country, new Set<String> { 'gq', 'gnq', 'equatorial guinea' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSDPAA4'; //Patch All LatAm - EQUATORIAL GUINEA
    if(opIn(t.country, new Set<String> { 'et', 'eth', 'ethiopia' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSDbAAO'; //Patch GB - ETHIOPIA
    if(opIn(t.country, new Set<String> { 'fk', 'flk', 'falkland islands', 'malvinas' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSDfAAO'; //Patch All LatAm - FALKLAND ISLANDS (MALVINAS)
    if(opIn(t.country, new Set<String> { 'gr', 'grc', 'greece' }) && opIn(t.custom1, new Set<String> { 'commercial', 'soho', 'smb' }))      return 'a3070000000TSEcAAO'; //Patch GB Southern Europe - GREECE
    if(opIn(t.country, new Set<String> { 'gt', 'gtm', 'guatemala' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSExAAO'; //Patch All LatAm - GUATEMALA
    if(opIn(t.country, new Set<String> { 'gn', 'gin', 'guinea' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSF1AAO'; //Patch All LatAm - GUINEA
    if(opIn(t.country, new Set<String> { 'gw', 'gnb', 'guinea-bissau' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSF5AAO'; //Patch All LatAm - GUINEA-BISSAU
    if(opIn(t.country, new Set<String> { 'gy', 'guy', 'guyana' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSF9AAO'; //Patch All LatAm - GUYANA
    if(opIn(t.country, new Set<String> { 'ht', 'hti', 'haiti' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSFDAA4'; //Patch All LatAm - HAITI
    if(opIn(t.country, new Set<String> { 'bz', 'blz', 'belize' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSAlAAO'; //Patch All LatAm - BELIZE
    if(opIn(t.country, new Set<String> { 'bo', 'bol', 'bolivia' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSAxAAO'; //Patch All LatAm - BOLIVIA
    if(opIn(t.country, new Set<String> { 'bw', 'bwa', 'botswana' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSB5AAO'; //Patch GB - BOTSWANA
    if(opIn(t.country, new Set<String> { 'br', 'bra', 'brazil', 'brasil' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSBDAA4'; //Patch All LatAm - BRAZIL
    if(opIn(t.country, new Set<String> { 'cv', 'cpv', 'cape verde' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSBjAAO'; //Patch GB - CAPE VERDE
    if(opIn(t.country, new Set<String> { 'cl', 'chl', 'chile' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSBvAAO'; //Patch All LatAm - CHILE
    if(opIn(t.country, new Set<String> { 'co', 'col', 'colombia' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSCBAA4'; //Patch All LatAm - COLOMBIA
    if(opIn(t.country, new Set<String> { 'cr', 'cri', 'costa rica' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSCVAA4'; //Patch All LatAm - COSTA RICA
    if(opIn(t.country, new Set<String> { 'cu', 'cub', 'cuba' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSChAAO'; //Patch All LatAm - CUBA
    if(opIn(t.country, new Set<String> { 'ng', 'nga', 'nigeria' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSJOAA4'; //Patch GB - NIGERIA
    if(opIn(t.country, new Set<String> { 'ng', 'nga', 'nigeria' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSJPAA4'; //Patch GB - NIGERIA
    if(opIn(t.country, new Set<String> { 'pa', 'pan', 'panama' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSJvAAO'; //Patch All LatAm - PANAMA
    return null;
  }
  private Id matchGroup5(PatchDataModel.MatchTarget t)
  {
    if(opIn(t.country, new Set<String> { 'ph', 'phl', 'philippines' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSKBAA4'; //Patch All APAC - PHILIPPINES - GB
    if(opIn(t.country, new Set<String> { 'sg', 'sgp', 'singapore' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSLWAA4'; //Patch All APAC - SINGAPORE - GB
    if(opIn(t.country, new Set<String> { 'za', 'zaf', 'south africa' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSLqAAO'; //Patch GB - SOUTH AFRICA
    if(opIn(t.country, new Set<String> { 'ss', 'ssd', 'south sudan' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSLuAAO'; //Patch GB - SOUTH SUDAN
    if(opIn(t.country, new Set<String> { 'sd', 'sdn', 'sudan' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSMEAA4'; //Patch GB - SUDAN
    if(opIn(t.country, new Set<String> { 'my', 'mys', 'malaysia' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSHbAAO'; //Patch All APAC - MALAYSIA - GB
    if(opIn(t.country, new Set<String> { 'mx', 'mex', 'mexico' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSIBAA4'; //Patch All LatAm - MEXICO
    if(opIn(t.country, new Set<String> { 'mm', 'mmr', 'myanmar', 'burma' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSIlAAO'; //Patch All APAC - MYANMAR (Burma) - GB
    if(opIn(t.country, new Set<String> { 'na', 'nam', 'namibia' }) && opIn(t.custom1, new Set<String> { 'general business', 'corp sales', 'corporate sales' }))      return 'a3070000000TSIpAAO'; //Patch GB - NAMIBIA
    if(opIn(t.country, new Set<String> { 'jm', 'jam', 'jamaica' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSG7AAO'; //Patch All LatAm - JAMAICA
    if((opIn(t.state, new Set<String> { 'ct', 'connecticut' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSPNAA4'; //Patch GB US North East - Connecticut
    if((opIn(t.state, new Set<String> { 'de', 'delaware' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSPUAA4'; //Patch GB US North East - Delaware
    if((opIn(t.state, new Set<String> { 'ga', 'georgia' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' })) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a3070000000TSPcAAO'; //Patch GB US South East - Georgia
    if(opIn(t.country, new Set<String> { 'th', 'tha', 'thailand' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSMsAAO'; //Patch All APAC - THAILAND - GB
    if(opIn(t.country, new Set<String> { 'uy', 'ury', 'uruguay' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSNqAAO'; //Patch All LatAm - URUGUAY
    if(opIn(t.country, new Set<String> { 've', 'ven', 'venezuela' }) && opIn(t.custom1, new Set<String> { 'smb', 'commercial', 'soho' }))      return 'a3070000000TSO2AAO'; //Patch All LatAm - VENEZUELA
    if(opIn(t.country, new Set<String> { 'my', 'mys', 'malaysia' }) && opEqual(t.custom1, 'Enterprise'))      return 'a3070000000ElQfAAK'; //Patch All APAC - MALAYSIA - ENT
    if(opIn(t.country, new Set<String> { 'sg', 'sgp', 'singapore' }) && opEqual(t.custom1, 'Enterprise'))      return 'a3070000000ElQaAAK'; //Patch GB ASEAN - SINGAPORE.
    if(opEqual(t.custom1, 'Enterprise') && opIn(t.country, new Set<String> { 'thailand', 'th' }))      return 'a3070000000ElQVAA0'; //Patch All APAC - THAILAND - ENT
    if(opIn(t.state, new Set<String> { 'vt', 'vermont' }) && opIn(t.custom1, new Set<String> { 'smb', 'soho' }) && opIn(t.country, new Set<String> { 'us', 'usa', 'u.s.', 'u.s.a', 'united states', 'united states of america' }))      return 'a30700000010pwnAAA'; //Patch GB US New England/Canada - Vermont
    return 'a3070000000TSgfAAG'; //Patch ROW
    return null;
  }
  //returns the matched patch
  global PatchDataModel.PatchInfo match(PatchDataModel.MatchTarget t)
  {
    Id result = null;
    prematches = prematchList(t);
    result = matchGroup1(t);
    if(result != null) return processResult(result);
    result = matchGroup2(t);
    if(result != null) return processResult(result);
    result = matchGroup3(t);
    if(result != null) return processResult(result);
    result = matchGroup4(t);
    if(result != null) return processResult(result);
    result = matchGroup5(t);
    if(result != null) return processResult(result);
    return null;
  }
}