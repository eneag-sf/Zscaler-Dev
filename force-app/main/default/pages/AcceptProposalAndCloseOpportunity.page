<apex:page controller="AcceptProposalAndCloseOpptyCntrlr" showHeader="true" sidebar="false" action="{!pageLoad}">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.nicescroll/3.6.0/jquery.nicescroll.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.min.js" type="text/javascript"></script>
    <script src="https://npmcdn.com/tether@1.2.4/dist/js/tether.min.js"></script>
    <script src="https://npmcdn.com/bootstrap@4.0.0-alpha.5/dist/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha.5/js/bootstrap.min.js" type="text/javascript">
    </script>
    <script>
        (function() {
            'use strict';
            var closeOpportunityApp= angular.module('closeOpportunityApp', []);

            closeOpportunityApp.controller('closeOpportunityController' ,['$scope', '$q','$timeout', '$window', '$filter', '$location', function($scope, $q, $timeout, $window, $filter, $location){
                $scope.message = 'The opportunity is being closed. Please wait...';
                $scope.error = '';
                var proposalId, NSSOId;

                var queryString = $window.location.href.split('?')[1];
                var queryStringParams = queryString.split('&');
                var queryStringMap = new Object();
                for (var i = 0; i < queryStringParams.length; i++) {
                    var key = queryStringParams[i].split('=')[0];
                    var value = queryStringParams[i].split('=')[1];
                    queryStringMap[key] = value;
                }

                proposalId = queryStringMap['id'] != undefined && queryStringMap['id'] != null ? queryStringMap['id'] : '';
                NSSOId = queryStringMap['NSSOId'] != undefined && queryStringMap['NSSOId'] != null ? queryStringMap['NSSOId'] : '';
                
                // Helper to call Apex methods
                $scope.callRemote = function(serviceName, parameters, callback, config) {
                    if(parameters == null) {
                        parameters = [];
                    }
                    var callbackWrap = function(result, event) {
                        var callbackResponse = '';
                        if(event.status) {
                            callbackResponse = { 'result': result, 'error': false, 'errorMessage': '' };
                        } else {
                            var errorMessage = '';
                            if (event.type === 'exception') {
                                errorMessage += event.message + ". " + event.where + ".";
                            } else {
                                errorMessage += event.message;
                            }

                            callbackResponse = { 'result': '', 'error': true, 'errorMessage': errorMessage };
                        }

                        callback.call($scope, callbackResponse);
                    };
                    parameters.push(callbackWrap);
                    if(config) {
                        parameters.push(config);
                    }
                    try {
                        serviceName.apply($scope, parameters);
                    } catch(e) {
                        callbackWrap(null, {status: false});
                    }
                };

                $scope.closeOpportunity = function(proposalId) {
                    var deferred = $q.defer();
                    $scope.callRemote(AcceptProposalAndCloseOpptyCntrlr.closeOpportunity, [proposalId], function(result, event) {
                        deferred.resolve(result);
                    }, {buffer: false, timeout: 120000});
                    
                    return deferred.promise;
                }
                
                $scope.closeOpportunity(proposalId).then(function(result) {
                   if (!result.error) {
                       $scope.message = 'The opportunity is closed and the proposal is not accepted as there are open Finance cases or proposal is still not approved. Redirecting back to Netsuite...';
                       
                       $timeout(function() {
                           redirect();
                       }, 5000);
                   } else {
                       $scope.error = "Unable to close the opportunity. Please contact your administrator.";
                   }
                });
            }]);
        }());
    </script>
    <style>
        .modal-backdrop {
            background-color: rgba(255,255,255,0.75);
            position: absolute;
            top: 0px;
            left: 0px;
            width: 100%;
            height: 100%;
        }
    
        .loading-modal {
            position: relative;
            height: 300px;
            width: 500px;
            top: 20%;
            background: url({!$Resource.loadingimg}) 50% 0 no-repeat;
            margin: 0 auto;
            padding-top: 60px;
            text-align: center;
            font-family: Verdana, Geneva, sans-serif;
        }
    
    </style>

    <body id="mainBody" ng-app="closeOpportunityApp" ng-controller="closeOpportunityController" ng-cloak="true">
        <div style="min-height: 100px;">
            <div id="loading-backdrop" class="modal-backdrop">
                <div id="loading-message-block" class="loading-modal" ng-if="message != ''">
                    {{message}}
                </div>
                <div ng-if="error != ''">
                    <span style="color: red; font-weight: bold; font-size: 1.2em">{{error}}</span>
                </div>
            </div>
        </div>
    </body>
    <apex:form >
        <apex:actionFunction id="redirect" name="redirect" action="{!redirect}">
        </apex:actionFunction>
    </apex:form>
</apex:page>