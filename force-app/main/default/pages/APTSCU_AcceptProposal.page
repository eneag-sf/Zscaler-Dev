<!--
  @File Name          : APTSCU_AcceptProposal.page
  @Description        : 
  @Group              : 
  @Last Modified By   : Minkesh patel
  @Last Modified On   : 4/30/2020, 8:04:16 PM
  @Modification Log   : 
-->
<apex:page controller="APTSCU_AcceptProposalController" sidebar="false" showHeader="false">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.nicescroll/3.6.0/jquery.nicescroll.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.min.js" type="text/javascript"></script>
        <script>
                var acceptProposalApp= angular.module('acceptProposalApp', []);
                acceptProposalApp.controller('acceptProposalController' ,['$scope',function($scope,$filter){
                    $scope.message = 'Accepting Proposal';
                }]);
                
                
        </script>        
<script>
    var retUrl = '{!retUrl}';
    $( document ).ready(function() {
        var opportunityId = '{!opportunityId}';
        var proposalId = '{!proposalId}';
        showLoadingImage();
        delteOpportunityLineItem (proposalId,opportunityId);
    });
    
    function showLoadingImage(){
           $('.cstm-loading-img-submit').show();
            $('.messageBlock').show();
            $('.agreement-create').show();
            $('.overlay').show();
        
    }
    
    function hideLoadingImage(){
        document.getElementById('LoadingImg').style.display = 'none';
    }
    
    function delteOpportunityLineItem (proposalId,opportunityId) {
         Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.delteOpportunityLineItem}', proposalId,opportunityId,
            function(result, event) {
                acceptproposal(proposalId);
            });
         
    }
      
    function acceptproposal (proposalId) {
        console.log(proposalId);
   
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.acceptproposal}', proposalId,
            function(result, event) {
                changeOpportunityStatus(proposalId);
            });
        
    }   
    
    function changeOpportunityStatus(proposalId) {
        var opportunityId = '{!opportunityId}';
         Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.changeOpportunityStatus}', proposalId,opportunityId,
            function(result, event) {
                 console.log(result);
                 if(!result) {
                 
                     setTimeout(function(){
                      angular.element(document.getElementById('mainbody')).scope().message =  'Creating Order & Assets';
                      angular.element(document.getElementById('mainbody')).scope().$apply();
                      changeOpportunityStatus (proposalId);
                      
                    }, 2000);
                    
                } else {
                    angular.element(document.getElementById('mainbody')).scope().message =  'Creating Renewal Opportunity, Opportunity Partner and Proposal';
                    angular.element(document.getElementById('mainbody')).scope().$apply();
                    createRenewalOpportunity(proposalId);
                }
            });
    }
    

    
    
    function createRenewalOpportunity (proposalId) {
        //debugger
        console.log(proposalId);
        var opportunityId = '{!opportunityId}';
        var accountId = '{!accountId}';
        var billtoAccountId = '{!billtoAccountId}';
        Visualforce.remoting.timeout = 120000;
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.createRenewalOpportunity}', proposalId,accountId,opportunityId,billtoAccountId,
            function(result, event) {
                if(event.status)
                {
                    angular.element(document.getElementById('mainbody')).scope().message =  'Creating Cart';
                    angular.element(document.getElementById('mainbody')).scope().$apply();
                    // CreateCartForProposal(result,proposalId);
                    //debugger;
                    console.log('resule==>', result)
                    //Added by minkesh for new requirement 2 start
                    if(result && result.indexOf('::') > -1 ) {
                        var resultArray = result.split('::');
                        isCreateNew = JSON.parse(resultArray[1].toLowerCase());
                        CreateCartForProposal(resultArray[0], proposalId);
                    } else {
                        isCreateNew = false;
                        CreateCartForProposal(result, proposalId);
                    }
                    //Added by minkesh for new requirement 2 end
                }
                else if(event.status == false)
                {
                    if(event.type == 'exception')
                    {
                        angular.element(document.getElementById('mainbody')).scope().message = 'Please reach out sfdc support team with this error : '+event.message ;
                    }
                     
                }
                
            });
        
    }
    
    var premiumSupport;
    var productid;
    var allAssetMapString;
    var AssetMapTorenewString;
    var assetQuantityMapString;
    var assetNetAmountMapString; //Added by minkesh for new requirement 1
    var isCreateNew; //Added by minkesh for new requirement 2
    
    function getAllData (cartId,proposalId,oldProposalId,index) {
         var accountId = '{!accountId}';
         Visualforce.remoting.Manager.invokeAction(
             '{!$RemoteAction.APTSCU_AcceptProposalController.getAlldata}',accountId,index, isCreateNew, oldProposalId,//Added by minkesh for new requirement 2 (Added by minkesh for new requirement 2)
            function(result, event) {
                  if(index == 0) {
                      premiumSupport = result;
                      getAllData (cartId,proposalId,oldProposalId,1);
                  }
                  if(index == 1) {
                      productid = result;
                      getAllData (cartId,proposalId,oldProposalId,2);
                  }
                  if(index == 2) {
                      allAssetMapString = result;
                      getAllData (cartId,proposalId,oldProposalId,3);
                  }
                  if(index == 3) {
                      AssetMapTorenewString = result;
                      getAllData (cartId,proposalId,oldProposalId,4);
                  }
                  //Added by minkesh for new requirement 1 Start
                  if(index == 4) {
                      assetQuantityMapString = result;
                      getAllData (cartId,proposalId,oldProposalId,5);
                  }
                  if(index == 5) {
                        assetNetAmountMapString = result;
                        if(premiumSupport == 'true') {
                            console.log('###'+cartId);
                            console.log('55');
                            addPremiumsupport(cartId,proposalId,oldProposalId);
                        } else {
                            renewIndividualAssetLineItem(cartId,proposalId,oldProposalId,1);
                        }
                  }
                  //Added by minkesh for new requirement 1 end
            },{escape:false});     
    }
    
    function CreateCartForProposal (proposalId,oldProposalId) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.CreateCartForProposal}',proposalId, 
            function(result, event) {
                angular.element(document.getElementById('mainbody')).scope().message =  'Renewing Assets';
                angular.element(document.getElementById('mainbody')).scope().$apply();
                // window.location = '/'+proposalId;
                console.log('result =='+result);
                getAllData (result,proposalId,oldProposalId,0);
                //addAssetLineItemsToCart(result,proposalId,oldProposalId);
            }); 
        
    }
    
    function addPremiumsupport (cartId,proposalId,oldProposalId) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.addPremiumsupport}',cartId,productid,
            function(result, event) {
                renewIndividualAssetLineItem(cartId,proposalId,oldProposalId,1);
            }); 
        
    }
   
    function renewIndividualAssetLineItem(cartId,proposalId,oldProposalId,currentIndex) {
     
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.renewIndividualAssetLineItem}',currentIndex,cartId,allAssetMapString,AssetMapTorenewString,assetQuantityMapString, oldProposalId, assetNetAmountMapString,// Added By Minkesh for requirement 1 (oldProposalId, assetNetAmountMapString)
            function(result, event) {
               
                if(result) { 
                    calculateOldACV(cartId,proposalId,oldProposalId);
                }
                else {
                   // alert(4);    
                    currentIndex = currentIndex + 1;
                    renewIndividualAssetLineItem(cartId,proposalId,oldProposalId,currentIndex);
                }
            }); 
        
    }
    
  
    
    // function calculateOldACV (cartId,proposalId,oldProposalId)  {
    //     var accountId = '{!accountId}';
    //     Visualforce.remoting.Manager.invokeAction(
    //         '{!$RemoteAction.APTSCU_AcceptProposalController.calculateOldACV}',cartId,accountId,
    //         function(result, event) {
                
    //             deleteRampLineItem (cartId,proposalId,oldProposalId)
    //         }); 
    // }
    function calculateOldACV (cartId,proposalId,oldProposalId)  {
        var accountId = '{!accountId}';
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.calculateOldACV}',cartId,accountId,
            function(result, event) {
                
                deleteRampLineItem (cartId,proposalId,oldProposalId)
            }); 
    }
    
    function deleteRampLineItem (cartId,proposalId,oldProposalId)  {
        var accountId = '{!accountId}';
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.deleteRampLineItem}',cartId,accountId,
            function(result, event) {
                angular.element(document.getElementById('mainbody')).scope().message =  'Repricing Cart';
                angular.element(document.getElementById('mainbody')).scope().$apply();
                repriceCart (cartId,proposalId,oldProposalId)
            });  
        
    }
    
   function repriceCart (cartId,proposalId,oldProposalId) {
        var accountId = '{!accountId}';
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.repriceCart}',cartId,
            function(result, event) {
                    if(result) {
                        //alert(1);
                        repriceCart (cartId,proposalId,oldProposalId)
                    } else {
                        //alert(2);
                        angular.element(document.getElementById('mainbody')).scope().message =  'Finalizing Proposal';
                        angular.element(document.getElementById('mainbody')).scope().$apply();
                        //debugger;
                        finalizeProposal (cartId,proposalId,oldProposalId);
                        //RenewUpsellProposal (cartId,proposalId,oldProposalId)////added by minkesh for new Requirement 1 
                    }
                   
            }); 
        
    }
    
     function finalizeProposal (cartId,proposalId,oldProposalId) {
        var templateId = '{!templateId}';
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.finalizeProposal}',cartId,templateId,
            function(result, event) {
                   angular.element(document.getElementById('mainbody')).scope().message =  'Making Proposal Primary';
                   angular.element(document.getElementById('mainbody')).scope().$apply();
                  makePrimary(proposalId);
                  /*var url = window.retUrl;
                  window.location = url;*/
            }); 
        
    }
    //added by Raghu for Margin
    function makePrimary(proposalId) {
         Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.makePrimary}',proposalId,
            function(result, event) {
                angular.element(document.getElementById('mainbody')).scope().message =  'Completing the acceptance Process.';
                angular.element(document.getElementById('mainbody')).scope().$apply();
                var url = window.retUrl;
                window.location = url;
            }); 
        
    } 
    //end of change by Raghu for Margin
    //added by minkesh for new Requirement 1 - start
    function RenewUpsellProposal (cartId,proposalId,oldProposalId,accountId) {
         var accountId = '{!accountId}';
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.RenewUpsellProposal}',cartId,proposalId,oldProposalId,accountId,
            function(result, event) {
                     var url = window.retUrl;
                  window.location = url;
            }); 
        
    }  
    //added by minkesh for new Requirement 1 - end  
    
   function generateDocument(cartId,proposalId,oldProposalId) {
        var apiServerURL = '{!apiServerURL}';
        var templateId = '{!templateId}';
        var sessionId = '{!sessionId}';
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.APTSCU_AcceptProposalController.generateDocument}',proposalId,apiServerURL,templateId,sessionId,
            function(result, event) {
                angular.element(document.getElementById('mainbody')).scope().message =  'Completing the acceptance Process.';
                angular.element(document.getElementById('mainbody')).scope().$apply();
                var url = '/'+oldProposalId;
                window.location = url;
            }); 
        
    }  
        
</script>
<style>
    .loading-container{
        padding-top: 20%;
        position: fixed;
        left: 0px;
        top:0px;
        z-index: 999999999;
        width: 100%;
        height: 100%;
        background-color: rgba(255,255,255,0.75);
     
    }
     .overlay {
            background-color: white;
            z-index: 999;
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            display: none;
        }
       .messageBlock{
            background-color: white;
            position: absolute;
            top: 40%;
            left: 43%;
            z-index: 99;
            width: 300px;
            height: 150px;
            text-align: center;
        } 
        .cstm-loading-img-submit {
              display: none;
              background-image: url({!$Resource.loadingimg});
              width: 51px;  /* the exact width of the image */
              height: 57px;  /* the exact height of the image */
              position: absolute;
              top: 25px;
              margin-left: 40%;
              z-index: 99;
        }
   
</style>
<body   ng-app="acceptProposalApp" ng-controller="acceptProposalController" ng-cloak='True' id="mainbody">
<div id="LoadingImg" class="loading-container" style="display:none;">
            <img src="{!$Resource.loadingimg}" style="margin-left: 50%;"/><br />
        </div>
  <div class="overlay">
            <div class="messageBlock">
                <div class="cstm-loading-img-submit"></div>
                <div class="agreement-create" style="margin-top: 35%;">{{message}}</div>
            </div>
        </div>      
</body>
</apex:page>